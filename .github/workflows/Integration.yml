# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn clean package
    
    - name: Upload JAR artifact
      uses: actions/upload-artifact@v4
      with:
        name: my-app
        path: target/*.jar

      
    - name: Build Docker image
      run: docker build -t chairam121/newapp:v5 .
    
    - name: Image scaning
      uses: aquasecurity/trivy-action@0.33.1
      with:
        image-ref: 'chairam121/newapp:v5'
        format: 'table'
        exit-code: '0'  # Fail the pipeline if vulnerabilities are found
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'
        
    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Push Docker image
      run: docker push chairam121/newapp:v4

  Deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: SSH and Deploy
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          docker pull chairam121/newapp:v5
          docker stop newapp || true
          docker rm newapp || true
          docker run -d -p 8080:8080 --name newapp chairam121/newapp:v5

  

        
